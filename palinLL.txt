/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        ListNode* curr = head;
        stack<int> s;//vectors are also cool
        
        if(head == NULL) {return true;}
        if(head->next == NULL) {return true;}
        
        //put in stack
        while(curr != NULL){
           
            s.push(curr->val);
            curr = curr->next;
        }
        //check by pop
        while(head != NULL) {
            
            int currTop = s.top();
            
            s.pop();
            
            if(head->val != currTop) {return false;}
            
            head = head->next;
        }
        
        return true;
    }
};